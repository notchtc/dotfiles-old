#+TITLE: Awesome Config
#+AUTHOR: Cha0t1c
#+PROPERTY: header-args :tangle rc.lua

This is my [[https://awesomewm.org][awesome]] config.
It's split into modules so the main file isn't big and bloated.

* Table of contents :toc:
- [[#dependencies][Dependencies]]
- [[#import-required-libraries][Import Required Libraries]]
- [[#import-modules][Import Modules]]
- [[#error-handling][Error Handling]]
- [[#signals][Signals]]

* Dependencies
+ [[https://github.com/vicious-widgets/vicious][vicious]]
  Required for widgets (date and clock too)
* Import Required Libraries
This will import libraries required by commands in this config file.
#+BEGIN_SRC lua
-- Standard awesome library
local gears = require("gears")
local awful = require("awful")
require("awful.autofocus")
-- Widget and layout library
local wibox = require("wibox")
-- Theme handling library
local beautiful = require("beautiful")
-- Notification library
local naughty = require("naughty")
#+END_SRC

* Import Modules
This will import modules found in the modular folder.
+ Vars
  This module contains some variables used by other modules.
+ Bindings
  This module contains keybindings and (commented out) mouse bindings.
+ Rules
  This module applies rules like:
  + Border Width/Border Color
  + Floating Client
  + Titlebars
    In this config you need to enable them
    #+BEGIN_SRC lua
    titlebars_enabled = false
    #+END_SRC
    to
    #+BEGIN_SRC lua
    titlebars_enabled = true
   #+END_SRC
+ Bar
  This module affects the bar on the top of the screen.
+ Autolaunch
  This module just launches things on startup.

#+BEGIN_SRC lua
local vars = require("modular/vars")
local bindings = require("modular/bindings")
local rules = require("modular/rules")
local bar = require("modular/bar")
local autolaunch = require("modular/autolaunch")
#+END_SRC

* Error Handling
#+BEGIN_SRC lua
-- Check if awesome encountered an error during startup and fell back to
-- another config (This code will only ever execute for the fallback config)
if awesome.startup_errors then
    naughty.notify({ preset = naughty.config.presets.critical,
                     title = "Oops, there were errors during startup!",
                     text = awesome.startup_errors })
end

-- Handle runtime errors after startup
do
    local in_error = false
    awesome.connect_signal("debug::error", function (err)
        -- Make sure we don't go into an endless error loop
        if in_error then return end
        in_error = true

        naughty.notify({ preset = naughty.config.presets.critical,
                         title = "Oops, an error happened!",
                         text = tostring(err) })
        in_error = false
    end)
end
#+END_SRC

* Signals
#+BEGIN_SRC lua
-- Signal function to execute when a new client appears.
client.connect_signal("manage", function (c)
    -- Set the windows at the slave,
    -- i.e. put it at the end of others instead of setting it master.
    -- if not awesome.startup then awful.client.setslave(c) end

    if awesome.startup and
      not c.size_hints.user_position
      and not c.size_hints.program_position then
        -- Prevent clients from being unreachable after screen count changes.
        awful.placement.no_offscreen(c)
    end
end)

-- Add a titlebar if titlebars_enabled is set to true in the rules.
client.connect_signal("request::titlebars", function(c)
    -- buttons for the titlebar
    local buttons = gears.table.join(
        awful.button({ }, 1, function()
            client.focus = c
            c:raise()
            awful.mouse.client.move(c)
        end),
        awful.button({ }, 3, function()
            client.focus = c
            c:raise()
            awful.mouse.client.resize(c)
        end)
    )

    awful.titlebar(c) : setup {
        { -- Left
            awful.titlebar.widget.iconwidget(c),
            buttons = buttons,
            layout  = wibox.layout.fixed.horizontal
        },
        { -- Middle
            { -- Title
                align  = "center",
                widget = awful.titlebar.widget.titlewidget(c)
            },
            buttons = buttons,
            layout  = wibox.layout.flex.horizontal
        },
        { -- Right
            awful.titlebar.widget.floatingbutton (c),
            awful.titlebar.widget.maximizedbutton(c),
            awful.titlebar.widget.stickybutton   (c),
            awful.titlebar.widget.ontopbutton    (c),
            awful.titlebar.widget.closebutton    (c),
            layout = wibox.layout.fixed.horizontal()
        },
        layout = wibox.layout.align.horizontal
    }
end)

-- Enable sloppy focus, so that focus follows mouse.
client.connect_signal("mouse::enter", function(c)
    if awful.layout.get(c.screen) ~= awful.layout.suit.magnifier
        and awful.client.focus.filter(c) then
        client.focus = c
    end
end)

client.connect_signal("focus", function(c) c.border_color = beautiful.border_focus end)
client.connect_signal("unfocus", function(c) c.border_color = beautiful.border_normal end)
#+END_SRC
